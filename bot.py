import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType
from pendulum import today
from pendulum.constants import MONDAY
from re import sub

from keyboard import get_keyboard
from schedule import get_schedule, get_groups
from db import *
from constants import *

vk_session = vk_api.VkApi(token=TOKEN)
session_api = vk_session.get_api()
longpoll = VkLongPoll(vk_session)

class MyVkLongPoll(VkLongPoll):
    def listen(self):
        while True:
            try: 
                for event in self.check():
                    yield event
            except Exception as e:
                print('ERROR WITH LONGPOLL: ', e)

# –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø –∏ –∏—Ö id –≤ –±–¥
def update_groups():
    groups = get_groups()
    for group_name in groups:
        group_id = groups[group_name] 
        group_name = sub(r'\s', '', group_name).upper()
        insert_new_group(group_name, group_id)
    print('Groups updated successfully.')

#–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º text –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å user_id
def write_msg(user_id, text):
    vk_session.method('messages.send', {'user_id': user_id, 'message': text, 'random_id' : 0, 'keyboard' : get_keyboard()})

# –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å
# –ü–æ–ª—É—á–∞–µ—Ç id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–∞—Ç—É, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
def send_day(user_id, date):
    group = db_get_user_group_id(user_id)
    schedule = get_schedule(date, group)
    write_msg(user_id, schedule)

# –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é
# –ü–æ–ª—É—á–∞–µ—Ç id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å 
def send_week(user_id, monday):
    date = monday
    for i in range(6):
        send_day(user_id, date)
        date = date.add(days=1)
    # –í —Ä–µ–¥–∫–∏—Ö —Å–ª—É—á–∞—è—Ö –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–Ω—è—Ç–∏–µ –≤ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –∏ –æ–± —ç—Ç–æ–º –Ω—É–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å
    schedule = get_schedule(date, db_get_user_group_id(user_id))
    if schedule.find('–Ω–µ—Ç –∑–∞–Ω—è—Ç–∏–π') == -1:
        write_msg(user_id, schedule)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
def handler(user_id, message):

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–¥, –∑–Ω–∞—á–∏—Ç –º—ã –Ω–µ –∑–Ω–∞–µ–º –µ–≥–æ –≥—Ä—É–ø–ø—É
    if not db_user_exist(user_id):
        message = sub(r'\s', '', message).upper()
        # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ - —ç—Ç–æ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã, –∑–Ω–∞—á–∏—Ç –Ω—É–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –µ–µ –≤ –±–¥ –∫–∞–∫ –≥—Ä—É–ø–ø—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if db_group_exist(message):
            db_insert_new_user(user_id, message)
            text = '–¢—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –Ω–∞–ø–∏—Å–∞–≤ –Ω—É–∂–Ω—ã–π –¥–µ–Ω—å:\n—Å–µ–≥–æ–¥–Ω—è/–∑–∞–≤—Ç—Ä–∞/–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫/–ø–Ω –∏ –¥—Ä.' 
            write_msg(user_id, '–ì—Ä—É–ø–ø–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞. '+ text)
        else:
            write_msg(user_id, '–ù–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –≥—Ä—É–ø–ø—ãüò¨\n–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: 121. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: 103-–ü–ò–≤–≠, –∞ –Ω–µ 103. –ï—Å–ª–∏ –≤—Å—ë –µ—â—ë –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, –∑–Ω–∞—á–∏—Ç, —Ç–≤–æ–µ–π –≥—Ä—É–ø–ø—ã –Ω–µ—Ç –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ –≤—É–∑–∞ –∏ –º–Ω–µ –Ω–µ–≥–¥–µ –µ–≥–æ –≤–∑—è—Ç—å. –ü–æ–¥–æ–∂–¥–∏ :)')

    # –ï—Å–ª–∏ –º—ã –∑–Ω–∞–µ–º –≥—Ä—É–ø–ø—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    else:
        message = message.lower()
        date = today('Europe/Moscow')

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–æ—Å–∏–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –Ω–∞—á–∏–Ω–∞—è —Å —ç—Ç–æ–≥–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞
        if message == '—ç—Ç–∞ –Ω–µ–¥–µ–ª—è':
            send_week(user_id, date.start_of('week'))
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–æ—Å–∏–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –Ω–∞—á–∏–Ω–∞—è —Å —ç—Ç–æ–≥–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞
        elif message == '—Å–ª–µ–¥—É—é—â–∞—è –Ω–µ–¥–µ–ª—è':
            send_week(user_id, date.next(MONDAY))

        elif message == "–∏–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É":
            db_delete_user(user_id)
            write_msg(user_id, '–ö–∞–∫–∞—è –≥—Ä—É–ø–ø–∞?')

        # –í –ª—é–±–æ–º –¥—Ä—É–≥–æ–º —Å–ª—É—á–∞–µ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏–∞–Ω–∏–µ –Ω–∞ –æ–¥–∏–Ω –¥–µ–Ω—å
        else:
            #–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ —Ç–∏–ø—É "–∑–∞–≤—Ç—Ä–∞"/"–≤—á–µ—Ä–∞"/"–ø–Ω", –º–µ–Ω—è—è –¥–∞—Ç—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤–∏–∏
            if message == '–∑–∞–≤—Ç—Ä–∞':
                date = date.add(days=1)
            elif message == '–≤—á–µ—Ä–∞':
                date = date.add(days=-1)
            elif message in days_of_week:
                date = date.next(days_of_week[message])
            
            send_day(user_id, date)

update_groups()
print("Bot is running.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π longpoll
for event in longpoll.listen():
    if event.type == VkEventType.MESSAGE_NEW and event.to_me: 
        try:
            handler(event.user_id, event.text)
        except Exception as e:
            write_msg(event.user_id, '–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –ø–æ–∑–∂–µ.')
            print("ERROR: " + str(e))